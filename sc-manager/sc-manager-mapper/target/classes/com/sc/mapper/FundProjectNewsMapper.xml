<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sc.mapper.FundProjectNewsMapper">
  <resultMap id="BaseResultMap" type="com.sc.pojo.FundProjectNews">
    <id column="new_id" jdbcType="INTEGER" property="newId" />
    <result column="fund_project_id" jdbcType="INTEGER" property="fundProjectId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="date" jdbcType="TIME" property="date" />
    <result column="writter" jdbcType="VARCHAR" property="writter" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sc.pojo.FundProjectNews">
    <result column="content" jdbcType="LONGVARBINARY" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    new_id, fund_project_id, title, date, writter
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sc.pojo.FundProjectNewsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fund_project_news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sc.pojo.FundProjectNewsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fund_project_news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fund_project_news
    where new_id = #{newId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fund_project_news
    where new_id = #{newId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sc.pojo.FundProjectNewsExample">
    delete from fund_project_news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sc.pojo.FundProjectNews">
    insert into fund_project_news (new_id, fund_project_id, title, 
      date, writter, content
      )
    values (#{newId,jdbcType=INTEGER}, #{fundProjectId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{date,jdbcType=TIME}, #{writter,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sc.pojo.FundProjectNews">
    insert into fund_project_news
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="newId != null">
        new_id,
      </if>
      <if test="fundProjectId != null">
        fund_project_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="writter != null">
        writter,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="newId != null">
        #{newId,jdbcType=INTEGER},
      </if>
      <if test="fundProjectId != null">
        #{fundProjectId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIME},
      </if>
      <if test="writter != null">
        #{writter,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sc.pojo.FundProjectNewsExample" resultType="java.lang.Long">
    select count(*) from fund_project_news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fund_project_news
    <set>
      <if test="record.newId != null">
        new_id = #{record.newId,jdbcType=INTEGER},
      </if>
      <if test="record.fundProjectId != null">
        fund_project_id = #{record.fundProjectId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIME},
      </if>
      <if test="record.writter != null">
        writter = #{record.writter,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update fund_project_news
    set new_id = #{record.newId,jdbcType=INTEGER},
      fund_project_id = #{record.fundProjectId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIME},
      writter = #{record.writter,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fund_project_news
    set new_id = #{record.newId,jdbcType=INTEGER},
      fund_project_id = #{record.fundProjectId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIME},
      writter = #{record.writter,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sc.pojo.FundProjectNews">
    update fund_project_news
    <set>
      <if test="fundProjectId != null">
        fund_project_id = #{fundProjectId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIME},
      </if>
      <if test="writter != null">
        writter = #{writter,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where new_id = #{newId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sc.pojo.FundProjectNews">
    update fund_project_news
    set fund_project_id = #{fundProjectId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIME},
      writter = #{writter,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARBINARY}
    where new_id = #{newId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sc.pojo.FundProjectNews">
    update fund_project_news
    set fund_project_id = #{fundProjectId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIME},
      writter = #{writter,jdbcType=VARCHAR}
    where new_id = #{newId,jdbcType=INTEGER}
  </update>
</mapper>